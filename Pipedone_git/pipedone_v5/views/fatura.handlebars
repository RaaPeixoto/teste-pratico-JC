<link rel="stylesheet" href="/css/fatura.css">

    <div class="head">
        <button id="print"><i class="fi fi-rr-print"></i> Imprimir</button>
        <button onclick="openPay()"><i class="fi fi-rr-usd-circle"></i> Pagar agora</button>
    </div>
    
    <div id="modal_pay" class="modal oculto">
        <div id="paymentBrick_container"></div>
    </div>

    <div class="a4">
        <div class="container">
            <h1>Fatura #<b id="fatura_id">00</b></h1>
            <img class="logo" src="/img/logo_pipe_para_fundo_branco.svg" alt="Pipedone">
        </div>
        <div class="container">
            <div class="divisor">
                <h4>Fornecedor:</h4>
                <span>Hubytech Soluções em Tecnologia LTDA</span><br>
                <span>Av Amintas Barros, 3700, Sala 401 Bloco B, CTC, CEP 59.075-810 - Lagoa Nova | Natal-RN</span><br>
                <span>CNPJ: 38.486.958/0001-07</span><br>
            </div>
        </div>
        <div class="container">
            <div class="divisor">
                <h4>Cliente:</h4>
                <span id="nome_cliente"></span><br>
                <span id="ende_cliente"></span><br>
                <span id="cnpj_cliente"></span><br>
            </div>
        </div>
        <div class="container">
            <div class="divisor">
                <span><strong>Plano:</strong> <span id="plano"></span></span><br>
                <span><strong>Período:</strong> <span id="periodo"></span></span><br>
            </div>
        </div>
        <div class="container">
            <table>
                <thead>
                    <tr>
                        <th>QTD</th>
                        <th>DESCRIÇÃO</th>
                        <th>VALOR UNITÁRIO</th>
                        <th>VALOR TOTAL</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td id="docs_signeds">0</td>
                        <td>Links de assinatura</td>
                        <td id="valor_sign">2,50</td>
                        <td id="total_sign">0,00</td>
                    </tr>
                    <tr>
                        <td id="photos_registed">0</td>
                        <td>Links de fotos</td>
                        <td id="valor_photo">5,00</td>
                        <td id="total_photo">0,00</td>
                    </tr>
                    <tr>
                        <td id="pipes">0</td>
                        <td>Pipes disponíveis</td>
                        <td id="valor_pipe">7,00</td>
                        <td id="total_pipe">0,00</td>
                    </tr>
                    <tr>
                        <td id="members">0</td>
                        <td>Usuários</td>
                        <td id="valor_member">0,00</td>
                        <td id="total_member">0,00</td>
                    </tr>
                </tbody>
                <tfoot>
                    <tr>
                        <td></td>
                        <td></td>
                        <td style="text-align: right">Sub total</td>
                        <td id="subtotal">R$ 500,00</td>
                    </tr>
                    <tr>
                        <td></td>
                        <td></td>
                        <td style="text-align: right">Desconto</td>
                        <td id="desconto">- R$ 500,00</td>
                    </tr>
                    <tr>
                        <td></td>
                        <td></td>
                        <td style="text-align: right">Total</td>
                        <td id="total">R$ 500,00</td>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>

<script src="/js/main.js"></script>
<script src="/lib/brikcs-mercadopago.js"></script>
<script>
    const mp = new MercadoPago('TEST-4f408fa3-2722-4b5f-9b95-0db0463a1ed4');
    const bricksBuilder = mp.bricks();
    const fatura = JSON.parse('{{{subs}}}');
    console.log(fatura);

    function openPay(){
        $(`#modal_pay`).fadeIn(200);
        $(`#modal_pay`).siblings().css('filter', 'blur(4px)');
    }

    openPay();

    const renderPaymentBrick = async (bricksBuilder) => {
        const settings = {
        initialization: {
            amount: parseFloat(fatura.amount/100), // valor total a ser pago
        },
        customization: {
            paymentMethods: {
                creditCard: 'all',
                bankTransfer: 'all',
            },
        },
        callbacks: {
            onReady: () => {
            /*
                Callback chamado quando o Brick estiver pronto.
                Aqui você pode ocultar loadings do seu site, por exemplo.
            */
            },
            onSubmit: async({ selectedPaymentMethod, formData }) => {
            // callback chamado ao clicar no botão de submissão dos dados
/*
                var payment_data = {
                    transaction_amount: formData.transaction_amount,
                    description: `Plano ${fatura.plan} Pipedone.com`,
                    payment_method_id: formData.payment_method_id,
                    payer: formData.payer
                };

*/
                var submitForm = await axios.post(`/api/mercado-pago/processar-pagamento`, {
                    form: formData
                });

                console.log(submitForm);

                {{!-- return new Promise((resolve, reject) => {
                    fetch("/api/mercado-pago/processar-pagamento", {
                        method: "POST",
                        headers: {
                        "Content-Type": "application/json",
                        },
                        body: formData
                    }).then((response) => {
                        // receber o resultado do pagamento
                        console.log(response)
                        resolve();
                    }).catch((error) => {
                        // lidar com a resposta de erro ao tentar criar o pagamento
                        console.log(error)
                        reject();
                    })
                }); --}}
            },
            onError: (error) => {
                // callback chamado para todos os casos de erro do Brick
                console.error(error);
                error(error);
            },
        },
        };
        window.paymentBrickController = await bricksBuilder.create(
            'payment',
            'paymentBrick_container',
            settings
        );
    };
    renderPaymentBrick(bricksBuilder);

    $('#fatura_id').text(fatura.id);
    $('#plano').text(fatura.plan);

    function retornaMesExtenso(data) {
        var meses = [
            'Janeiro',
            'Fevereiro',
            'Março',
            'Abril',
            'Maio',
            'Junho',
            'Julho',
            'Agosto',
            'Setembro',
            'Outubro',
            'Novembro',
            'Dezembro'
        ];
        var dia = new Date(data);
        return meses[dia.getMonth()];
    }

    $('#periodo').text(retornaMesExtenso(fatura.payment_date) + ' de ' + fatura.payment_date.split('-')[0]);

    async function setOrganization(org_id) {
        var org = await getOrgById(org_id);
        var meta = org.metadata;
        console.log(meta);
        
        $('#nome_cliente').text(org.name);
        $('#ende_cliente').text(meta.config.dados.endereco);
        $('#cnpj_cliente').text('CNPJ: '+ meta.config.dados.cnpj);


        var limits = await limitsPlan(fatura.plan);

        setNumbersConsumerFinanceiro(fatura.payment_date, limits);
    }

    setOrganization(fatura.organization_id);

    async function setNumbersConsumerFinanceiro(payment_date, limits) {

        var amount = parseFloat(fatura.amount)/100;

        $('#docs_signeds').text(limits.num_signs);
        var valor_sign = parseFloat($('#valor_sign').text().replace(',', '.'));
        var total_sign = valor_sign*limits.num_signs;
        $('#total_sign').text(total_sign.toFixed(2).replace('.', ','));

        $('#photos_registed').text(limits.num_photos);
        var valor_photo = parseFloat($('#valor_photo').text().replace(',', '.'));
        var total_photo = valor_photo*limits.num_signs;
        $('#total_photo').text(total_photo.toFixed(2).replace('.', ','));

        $('#pipes').text(limits.num_pipes);
        var valor_pipe = parseFloat($('#valor_pipe').text().replace(',', '.'));
        var total_pipe = valor_pipe*limits.num_signs;
        $('#total_pipe').text(total_pipe.toFixed(2).replace('.', ','));

        $('#members').text(limits.num_users);

        var valor_unitario = (amount/limits.num_users);
        var total_unitario = (valor_unitario*limits.num_users);

        $('#valor_member').text(valor_unitario.toFixed(2).replace('.', ','));
        $('#total_member').text(total_unitario.toFixed(2).replace('.', ','));
        
        var subtotal = total_sign + total_photo + total_pipe + total_unitario;
        
        $('#subtotal').text(subtotal.toFixed(2).replace('.', ','));

        var desconto = amount - subtotal;

        $('#desconto').text(desconto.toFixed(2).replace('.', ','));

        $('#total').text(amount.toFixed(2).replace('.', ','));


    };

    async function CriaPDF2(innerHTML) {
        var minhaTabela = innerHTML;
        var getStyle = await axios.get('/css/fatura.css');
        console.log(getStyle.data);
        //return;
        var style = "<style>";
        style += getStyle.data;
        style += "</style>";
        // CRIA UM OBJETO WINDOW
        var win = window.open('', '', 'height=700,width=700');
        win.document.write('<html><head>');
        win.document.write('<title>Empregados</title>'); // <title> CABEÇALHO DO PDF.
        win.document.write(style); // INCLUI UM ESTILO NA TAB HEAD
        win.document.write('</head>');
        win.document.write('<body>');
        win.document.write(minhaTabela); // O CONTEUDO DA TABELA DENTRO DA TAG BODY
        win.document.write('</body></html>');
        win.document.close(); // FECHA A JANELA
        win.print(); // IMPRIME O CONTEUDO
    }

    $('#print').click(()=>{
        CriaPDF2($('.a4').html());
    })

</script>